server {
    listen 443 ssl;
    server_name local.lzok.me;

    ssl_certificate /etc/nginx/certs/local.lzok.me.crt;
    ssl_certificate_key /etc/nginx/certs/local.lzok.me.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ignore_invalid_headers off;
    client_max_body_size 8m;
    proxy_buffering off;

    location @plain404 {
        add_header 'Content-Type' 'text/plain' always;
        return 404 "Not Found";
    }

    add_header X-Request-Id $request_id; # Return to client
    location /api {
        if ($request_method = 'OPTIONS') {
            include /etc/nginx/common-headers.conf;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Cookie' always;

            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        include /etc/nginx/common-headers.conf;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Cookie' always;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-Id $request_id;

        proxy_connect_timeout 300;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;

        proxy_pass http://api;
    }

    location /static {
        location ~^((\/\w*))+(.*\.(png|jpg))$ {
            access_log off;
            expires 365d;

            error_page 404 @plain404;
            proxy_intercept_errors on;

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;
            rewrite ^((\/\w*))+(.*\.(png|jpg))$ $uri break;
            proxy_pass http://storage;
        }
        try_files $uri @plain404;
    }

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 300;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;

        proxy_pass http://client/;
    }

    location /_next/webpack-hmr {
        proxy_pass http://client/_next/webpack-hmr;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
